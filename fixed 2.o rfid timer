/* 
 * Typical pin layout used:
 * -----------------------------------------------------------------------------------------
 *             MFRC522      Arduino       Arduino   Arduino    Arduino          Arduino
 *             Reader/PCD   Uno/101       Mega      Nano v3    Leonardo/Micro   Pro Micro
 * Signal      Pin          Pin           Pin       Pin        Pin              Pin
 * -----------------------------------------------------------------------------------------
 * RST/Reset   RST          9             5         D9         RESET/ICSP-5     RST
 * SPI SS      SDA(SS)      10            53        D10        10               10
 * SPI MOSI    MOSI         11 / ICSP-4   51        D11        ICSP-4           16
 * SPI MISO    MISO         12 / ICSP-1   50        D12        ICSP-1           14VMN V VVV,VVVVVV  V,,,,,,,,,,,,,,,,,,,,VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVN,N,,MNVMVVVVVKVVKJ
 * SPI SCK     SCK          13 / ICSP-3   52        D13        ICSP-3           15
 */

#include <DS3231.h>
#include <SPI.h>
#include <MFRC522.h>

DS3231  rtc(SDA, SCL);
#define LED_PIN         4          // Led pin to check if it works
#define RST_PIN         9          // Configurable, see typical pin layout above
#define SS_PIN          10         // Configurable, see typical pin layout above

char* tagID[]={"Matt Damon", "Jens", "Conan"};
int ID ;
bool outside1 = false;
bool outside2 = false;
int counter1 ;
int counter2 ;



MFRC522 mfrc522(SS_PIN, RST_PIN);  // Create MFRC522 instance

void setup() {
  
  Serial.begin(9600);                 // Initialize serial communications with the PC
  while (!Serial);                    // Do nothing if no serial port is opened (added for Arduinos based on ATMEGA32U4)
  SPI.begin();                        // Init SPI bus
  mfrc522.PCD_Init();                 // Init MFRC522
  rtc.begin();
    // The following lines can be uncommented to set the date and time
    rtc.setDOW(MONDAY);     // Set Day-of-Week to SUNDAY
    rtc.setTime(10, 0, 0);     // Set the time to 12:00:00 (24hr format)
    rtc.setDate(1, 1, 2022);   // Set the date to January 1st, 2014
  
}
void printText(int ID){
//    Serial.print(tagID[ID]);    //tagID is the name corresponding in the string, ID is the actual ID of the tag, inserted into the function in the tag function itself
//    Serial.print(" is going ");
    Serial.println("Welkom");
    Serial.println(tagID[ID]);
    
    // Send Day-of-Week
    Serial.println("U bent terug gekomen om:");
    Serial.print(rtc.getDOWStr());
    Serial.print(" ");
    
    // Send date
    Serial.print(rtc.getDateStr());
    Serial.print(" -- ");
  
    // Send time
    Serial.print(rtc.getTimeStr());
    // Wait one second before repeating :)
    Serial.println();

    
}
void printText2(int ID){
  Serial.println("Tot ziens");
  Serial.println(tagID[ID]);
  // Send Day-of-Week
  Serial.println("U gaat de buitenwereld betreden om:");
  Serial.print(rtc.getDOWStr());
  Serial.print(" ");
  
  // Send date
  Serial.print(rtc.getDateStr());
  Serial.print(" -- ");

  // Send time
  Serial.print(rtc.getTimeStr());
  // Wait one second before repeating :)
  Serial.println();

    
}


void RFID_TAGS(){
  
  if ( ! mfrc522.PICC_IsNewCardPresent()) {
    return;
  }

  if ( ! mfrc522.PICC_ReadCardSerial()) {
    return;
  }
 
  if (mfrc522.uid.uidByte[0] == 0x75 && 
      mfrc522.uid.uidByte[1] == 0x4E &&
      mfrc522.uid.uidByte[2] == 0xB0 &&
      mfrc522.uid.uidByte[3] == 0x75) {
          
       
          //check if the tagholder was already outside, if not, it writes that the tagholder is going outside. if the tagholder was outside, it writes that the tagholder is going inside.
          if(outside1 == false){
            outside1 = true;
            printText(0);
          } 
          else{
            printText2(0);
            outside1 = false;
          }
          delay(1500);
    }
    

      
  else if  (mfrc522.uid.uidByte[0] == 0xB4 && 
            mfrc522.uid.uidByte[1] == 0x0C &&
            mfrc522.uid.uidByte[2] == 0xF9 &&
            mfrc522.uid.uidByte[3] == 0x65){
              ID = 1;
              
       
              //check if the tagholder was already outside, if not, it writes that the tagholder is going outside. if the tagholder was outside, it writes that the tagholder is going inside.
              if(outside2 == false){
                printText(1);
                outside2 = true;
                
                } 
              else{
                 printText2(1);
                outside2 = false;
    }
              delay(1500);         
  }
  
}

void loop() {
  RFID_TAGS(); 
  
}
